{"filter":false,"title":"store.py","tooltip":"/oop/oop_submissions/oop_assignment_005/store.py","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":163,"column":54},"action":"insert","lines":["class Store:","\t#store_item = []","\tdef __init__(self):","\t\tself.store_item = []","\t\t","\tdef __str__(self):","\t\tif self.store_item == []:","\t\t\treturn 'No items'","\t\treturn '\\n'.join(map(str,self.store_item))","\t","\tdef add_item(self,item):","\t\tself.store_item.append(item)","\t","\tdef count(self):","\t\treturn len(self.store_item)","\t","\tdef filter(self, q_object):","\t\tstore_obj = Store()","\t\tif q_object.operation == \"EQ\":","\t\t\tfor items in self.store_item:","\t\t\t\tif getattr(items,q_object.field) == q_object.value:","\t\t\t\t\tstore_obj.add_item(items)","\t\t\t'''","\t\t\tfor i in self.store_item:","\t\t\t\tif q_object.value == i.name:","\t\t\t\t\tstore_obj.add_item(i)","\t\t\t\telif q_object.value == i.category:","\t\t\t\t\tstore_obj.add_item(i)","\t\t\t\telif q_object.value == i.price:","\t\t\t\t\tstore_obj.add_item(i)","\t\t\t'''","\t\telif q_object.operation == \"GT\":","\t\t\tfor i in self.store_item:","\t\t\t\tif q_object.value < i.price:","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"GTE\":","\t\t\tfor i in self.store_item:","\t\t\t\tif q_object.value <= i.price:","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"LT\":","\t\t\tfor i in self.store_item:","\t\t\t\tif q_object.value > i.price:","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"LTE\":","\t\t\tfor i in self.store_item:","\t\t\t\tif q_object.value >= i.price:","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"STARTS_WITH\":","\t\t\tfor i in self.store_item:","\t\t\t\tif i.name.startswith(q_object.value) or i.category.startswith(q_object.value):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"ENDS_WITH\":","\t\t\tfor i in self.store_item:","\t\t\t\tif i.name.endswith(q_object.value) or i.category.endswith(q_object.value):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"IN\":","\t\t\tfor i in self.store_item:","\t\t\t\tif i.name in q_object.value or i.category in q_object.value or i.price in q_object.value:","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"CONTAINS\":","\t\t\tif q_object.field == \"name\":","\t\t\t\tfor i in self.store_item:","\t\t\t\t\tif (i.name.__contains__(q_object.value)):","\t\t\t\t\t\tstore_obj.add_item(i)","\t\t\telse:","\t\t\t\tfor i in self.store_item:","\t\t\t\t\tif (i.category.__contains__(q_object.value)):","\t\t\t\t\t\tstore_obj.add_item(i)","\t\t\t\t\t","\t\treturn store_obj","\t\t","\tdef exclude(self, q_object):","\t\texclude_obj = Store()","\t\tinclude_obj = self.filter(q_object)","\t\tfor items in self.store_item:","\t\t\tif items not in include_obj.store_item:","\t\t\t\texclude_obj.add_item(items)","\t\treturn exclude_obj","\t\t","\t\t'''","\t\tstore_obj = Store()","\t\tif q_object.operation == \"EQ\":","\t\t\tfor i in self.store_item:","\t\t\t\tif (q_object.value != i.name and q_object.value != i.price and q_object.value != i.category):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"GT\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(q_object.value < i.price):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"GTE\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(q_object.value <= i.price):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"LT\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(q_object.value > i.price):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"LTE\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(q_object.value >= i.price):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"STARTS_WITH\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(i.name.startswith(q_object.value)or i.category.startswith(q_object.value)):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"ENDS_WITH\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(i.name.endswith(q_object.value) or i.category.endswith(q_object.value)):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"IN\":","\t\t\tfor i in self.store_item:","\t\t\t\tif not(i.name in q_object.value or i.category in q_object.value or i.price in q_object.value):","\t\t\t\t\tstore_obj.add_item(i)","\t\t","\t\telif q_object.operation == \"CONTAINS\":","\t\t\tif q_object.field == \"name\":","\t\t\t\tfor i in self.store_item:","\t\t\t\t\tif not(i.name.__contains__(q_object.value)):","\t\t\t\t\t\tstore_obj.add_item(i)","\t\t\telse:","\t\t\t\tfor i in self.store_item:","\t\t\t\t\tif not(i.category.__contains__(q_object.value)):","\t\t\t\t\t\tstore_obj.add_item(i)","\t\t\t\t\t","\t\treturn store_obj","\t\t'''","\t\t","class Item:","\tdef __init__(self, name=None, price=0, category=None):","\t\tself.name = name","\t\tself.price = price","\t\tself.category = category","\t\t#raise error for value","\t\tif price <= 0:","\t\t\traise ValueError('Invalid value for price, got {}'.format(price))","\t","\tdef __str__(self):","\t\treturn f'{self.name}@{self.price}-{self.category}'","\t\t","class Query:","\tvalid_op = ['IN','EQ','GT','GTE','LT','LTE','STARTS_WITH','ENDS_WITH','CONTAINS']","\tdef __init__(self, field=None, operation=None, value=None):","\t\tself.field = field","\t\tself.operation = operation","\t\tself.value = value","\t\tif operation not in Query.valid_op:","\t\t\traise ValueError('Invalid value for operation, got {}'.format(operation))","\t\t","\tdef __str__(self):","\t\treturn f\"{self.field} {self.operation} {self.value}\""],"id":1}]]},"ace":{"folds":[],"scrolltop":2798.5,"scrollleft":0,"selection":{"start":{"row":163,"column":54},"end":{"row":163,"column":54},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":146,"state":"start","mode":"ace/mode/python"}},"timestamp":1587574490190,"hash":"159ac7524e69c376955393dd9df5879a09fb0404"}