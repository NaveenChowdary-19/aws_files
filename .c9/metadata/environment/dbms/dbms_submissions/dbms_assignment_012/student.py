{"changed":true,"filter":false,"title":"student.py","tooltip":"/dbms/dbms_submissions/dbms_assignment_012/student.py","value":"class DoesNotExist(Exception):\n\tpass\n\nclass MultipleObjectsReturned(Exception):\n\tpass\n\nclass InvalidField(Exception):\n\tpass\n\nclass Student:\n\tdef __init__(self, name, age, score):\n\t\tself.name = name\n\t\tself.student_id = None\n\t\tself.age = age\n\t\tself.score = score\n\n\t@classmethod\n\tdef get(cls,**kwargs): \n\t\t\n\t\tfor k,v in kwargs.items():\n\t\t\tcls.column = k\n\t\t\tcls.value = v\n\t\n\t\tif cls.column not in ('student_id','name','age','score'):\n\t\t\traise InvalidField('InvalidField')\n\t\t\t\n\t\tif cls.column == 'name':\n\t\t\trecord = read_data(f\"select * from Student where {cls.column} = \\'{cls.value}\\'\")\n\t\telse:\n\t\t\trecord = read_data(f\"select * from Student where {cls.column} = {cls.value}\")\n\t\t\n\t\tif len(record)==0:\n\t\t\traise DoesNotExist('DoesNotExist')\n\t\telif len(record)>1:\n\t\t\traise MultipleObjectsReturned('MultipleObjectsReturned')\n\t\n\t\toutput = Student(record[0][1],record[0][2],record[0][3])\n\t\toutput.student_id = record[0][0]\n\t\treturn output\n\n\tdef save(self):\n\t\timport sqlite3\n\t\tconnection = sqlite3.connect(\"students.sqlite3\")\n\t\tcrsr =  connection.cursor() \n\t\tcrsr.execute(\"PRAGMA foreign_keys=on;\") \n\t\tif self.student_id == None:\n\t\t\tcrsr.execute(f\"insert into Student (name,age,score) values (\\'{self.name}\\',{self.age},{self.score})\")        \n\t\t\tself.student_id = crsr.lastrowid\n\t\telse:\n\t\t\tcrsr.execute(f\"update Student SET name=\\'{self.name}\\',age={self.age},score={self.score}\")\n\t\tconnection.commit() \n\t\tconnection.close()\n\n\tdef delete(self):\n\t\twrite_data(f\"delete from student where student_id={self.student_id}\")\n\t\ndef write_data(sql_query):\n\timport sqlite3\n\tconnection = sqlite3.connect(\"students.sqlite3\")\n\tcrsr = connection.cursor() \n\tcrsr.execute(\"PRAGMA foreign_keys=on;\") \n\tcrsr.execute(sql_query) \n\tconnection.commit() \n\tconnection.close()\n\ndef read_data(sql_query):\n\timport sqlite3\n\tconnection = sqlite3.connect(\"students.sqlite3\")\n\tcrsr = connection.cursor()\n\tcrsr.execute(sql_query) \n\tans= crsr.fetchall()  \n\tconnection.close() \n\treturn ans\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":43,"column":9},"end":{"row":43,"column":10},"action":"insert","lines":[" "],"id":2}]]},"ace":{"folds":[],"scrolltop":772.3757936245405,"scrollleft":0,"selection":{"start":{"row":43,"column":10},"end":{"row":43,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":41,"state":"start","mode":"ace/mode/python"}},"timestamp":1590125348876}